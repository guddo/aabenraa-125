<?php

/**
 * @file
 * Tests of the autocomplete callback.
 */

class TingSearchAutocompleteTestWebCase extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => t('Ting search autocomplete opensearch Web Tests.'),
      'description' => t('Test if we are getting results when searching in opensearch.'),
      'group' => 'Ding! - Ting search autocomplete',
    );
  }

  public function setUp() {
    $this->profile = 'minimal';

    parent::setUp('ting', 'search', 'ting_search', 'ting_search_autocomplete');
    variable_set('ting_agency', '100200');
    variable_set('ting_search_url', 'http://opensearch.addi.dk/0.14/');
    variable_set('ting_scan_url', 'http://openscan.addi.dk/1.7/');
    variable_set('ting_spell_url', 'http://openspell.addi.dk/1.2/');
    variable_set('ting_recommendation_url', 'http://openadhl.addi.dk/1.1/');
    variable_set('search_active_modules', array('node' => 'node', 'ting_search' => 'ting_search'));
    variable_set('search_default_module', 'ting_search');
    variable_set('ting_enable_logging', TRUE);

  }

  public function testSearchResultSuggestions() {
    $search_strings = array(
      'harry potter',
      'Biblen',
      'Blomsterbergs sÃ¸de sager',
      'Network Security Tools',
      'Gorba',
    );

    foreach ($search_strings as $string) {
      $results = $this->_searchForString($string, 10);
      $this->assertTrue(TRUE, t('We are searching for %search_string and got @count_results results(s)', array('%search_string' => $string, '@count_results' => count($results))));
      if (count($results) < 10) {
        debug(implode("\n", $results));
      }
    }
  }

  private function _searchForString($search_string = FALSE, $count = 1) {
    $names = array();
    if ($search_string == TRUE) {
      require_once drupal_get_path('module', 'ting') . '/ting.client.inc';
      $results = ting_do_scan($search_string, 'anyIndexes', $count);
      foreach ($results->terms as $term) {
        $names[] = $term->name;
      }
    }
    return $names;
  }

}
